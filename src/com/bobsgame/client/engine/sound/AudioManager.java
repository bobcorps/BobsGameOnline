package com.bobsgame.client.engine.sound;

import java.util.ArrayList;
import java.util.Vector;

import com.bobsgame.client.engine.Engine;
import com.bobsgame.client.engine.EnginePart;
import com.bobsgame.audio.AudioUtils;



//=========================================================================================================================
public class AudioManager extends EnginePart
{//=========================================================================================================================



	public ArrayList<Music> musicList = new ArrayList<Music>();
	public ArrayList<Sound> soundList = new ArrayList<Sound>();


	//=========================================================================================================================
	public AudioManager(Engine g)
	{//=========================================================================================================================
		super(g);

	}


	//=========================================================================================================================
	public void init()
	{//=========================================================================================================================


	}




	//=========================================================================================================================
	public void update()
	{//=========================================================================================================================

		//SoundUtils.get().poll((int)Engine.mainTicksPassed);
		//if(Keyboard.isKeyDown(Keyboard.KEY_SPACE))oggEffect.playAsSoundEffect(1.0f, 1.0f, false);

		for(int i=0;i<musicList.size();i++)musicList.get(i).update();
		for(int i=0;i<soundList.size();i++)soundList.get(i).update();
	}

	//=========================================================================================================================
	public Music getMusicByName(String musicName)
	{//=========================================================================================================================
		if(musicName==null||musicName.length()==0)return null;

		for(int i=0;i<musicList.size();i++)if(musicList.get(i).name().equals(musicName))return musicList.get(i);

		String clippedName = musicName;
		if(clippedName.indexOf("_v")!=-1)clippedName.substring(0,clippedName.indexOf("_v"));

		for(int i=0;i<musicList.size();i++)
		{
			String name = musicList.get(i).name();
			if(name.indexOf("_v")!=-1)name = name.substring(0,name.indexOf("_v"));

			if(name.equals(clippedName))
			{
				log.warn("Could not find music: "+musicName+" so returned closest match: "+name);
				return musicList.get(i);
			}
		}

		return null;
	}

	//=========================================================================================================================
	public Music getMusicByID(int musicID)
	{//=========================================================================================================================
		for(int i=0;i<musicList.size();i++)if(musicList.get(i).id()==musicID)return musicList.get(i);
		return null;
	}

	//=========================================================================================================================
	public boolean isAnyMusicPlaying()
	{//=========================================================================================================================
		for(int i=0;i<musicList.size();i++)
		{
			Music m = musicList.get(i);
			if(m.isPlaying())return true;
		}
		return false;
	}

	//=========================================================================================================================
	public boolean isMusicPlaying(Music m)
	{//=========================================================================================================================
		return m.isPlaying();
	}

	//=========================================================================================================================
	public boolean isMusicPlaying(String musicName)
	{//=========================================================================================================================
		Music m = getMusicByName(musicName);
		if(m!=null)return m.isPlaying();
		return false;
	}

	//=========================================================================================================================
	public void playMusic(Music m)
	{//=========================================================================================================================
		m.play();
	}
	//=========================================================================================================================
	public void playMusic(String musicName)
	{//=========================================================================================================================
		Music m = getMusicByName(musicName);
		if(m!=null)m.play();
	}

	//=========================================================================================================================
	public void playMusic(Music m, float volume, float pitch, boolean loop)
	{//=========================================================================================================================

		if(m!=null)m.play(pitch,volume,loop);
	}

	//=========================================================================================================================
	public void playMusicByName(String musicName)
	{//=========================================================================================================================
		Music m = getMusicByName(musicName);
		if(m!=null)m.play();
	}

	//=========================================================================================================================
	public void playMusic(String musicName, float volume, float pitch, boolean loop)
	{//=========================================================================================================================
		Music m = getMusicByName(musicName);
		if(m!=null)m.play(pitch,volume,loop);
	}

	//=========================================================================================================================
	public void stopMusic(Music m)
	{//=========================================================================================================================
		m.stop();
	}

	//=========================================================================================================================
	public void stopMusic(String musicName)
	{//=========================================================================================================================
		Music m = getMusicByName(musicName);
		if(m!=null)m.stop();
	}

	//=========================================================================================================================
	public void fadeOutMusic(String musicName, int ticks)
	{//=========================================================================================================================
		Music m = getMusicByName(musicName);
		m.fadeOutAndStop(ticks);

	}

	//=========================================================================================================================
	public void fadeOutMusic(Music m, int ticks)
	{//=========================================================================================================================
		m.fadeOutAndStop(ticks);
	}

	//=========================================================================================================================
	public void stopAllMusic()
	{//=========================================================================================================================
		for(int i=0;i<musicList.size();i++)musicList.get(i).stop();
	}

	//=========================================================================================================================
	public void fadeOutAllMusic(int ticks)
	{//=========================================================================================================================
		for(int i=0;i<musicList.size();i++)
		{
			Music m = musicList.get(i);
			if(m.isPlaying()==true)m.fadeOutAndStop(ticks);
		}
	}

	//=========================================================================================================================
	public void setAllLoopingMusicThatIsNotFadingOutToNotLoop()
	{//=========================================================================================================================
		for(int i=0;i<musicList.size();i++)
		{
			Music m = musicList.get(i);
			if(m.isPlaying()==true && m.getLoop()==true)
			{
				if(m.isFadingOut()==false)
				{
					m.setLoop(false);
				}
			}
		}
	}

	//=========================================================================================================================
	public void pauseAllMusic()
	{//=========================================================================================================================
		for(int i=0;i<musicList.size();i++)musicList.get(i).stop();
	}

	//=========================================================================================================================
	public void unpauseAllMusic()
	{//=========================================================================================================================
		for(int i=0;i<musicList.size();i++)musicList.get(i).stop();
	}
















	//=========================================================================================================================
	public Sound getSoundByName(String soundName)
	{//=========================================================================================================================

		if(soundName==null||soundName.length()==0)return null;

		for(int i=0;i<soundList.size();i++)if(soundList.get(i).name().equals(soundName))return soundList.get(i);



		String clippedName = soundName;
		if(clippedName.indexOf("_v")!=-1)clippedName.substring(0,clippedName.indexOf("_v"));

		for(int i=0;i<soundList.size();i++)
		{
			String name = soundList.get(i).name();
			if(name.indexOf("_v")!=-1)name = name.substring(0,name.indexOf("_v"));

			if(name.equals(clippedName))
			{
				log.warn("Could not find sound: "+soundName+" so returned closest match: "+name);
				return soundList.get(i);
			}
		}


		return null;
	}

	//=========================================================================================================================
	public void playSound(String soundName, float volume, float pitch, int times)
	{//=========================================================================================================================

		Sound s = getSoundByName(soundName);
		if(s!=null)s.play(pitch,volume,times);

		//Exception e = new Exception();e.printStackTrace();
	}


	//=========================================================================================================================
	public void playSound(String soundName)
	{//=========================================================================================================================

		Sound s = getSoundByName(soundName);
		if(s!=null)s.play();
	}

	//=========================================================================================================================
	public void playSound(Sound s)
	{//=========================================================================================================================
		if(s!=null)s.play();
	}

	//=========================================================================================================================
	public void playSound(Sound s, float vol)
	{//=========================================================================================================================
		if(s!=null)s.play(1.0f,vol,1);
	}
	//=========================================================================================================================
	public void playSound(Sound s, float vol, float pitch, int times)
	{//=========================================================================================================================
		if(s!=null)s.play(pitch,vol,times);
	}



	//=========================================================================================================================
	public Music getMusicByIDCreateIfNotExist(int id)
	{//=========================================================================================================================
		for(int i=0;i<musicList.size();i++)
		{
			Music s = musicList.get(i);
			if(s.id()==id)return s;
		}

		return new Music(Engine(),id);
	}


	//=========================================================================================================================
	public Sound getSoundByIDCreateIfNotExist(int id)
	{//=========================================================================================================================
		for(int i=0;i<soundList.size();i++)
		{
			Sound s = soundList.get(i);
			if(s.id()==id)return s;
		}

		return new Sound(Engine(),id);
	}






}
